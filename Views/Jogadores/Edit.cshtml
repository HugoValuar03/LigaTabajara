@model LigaTabajara.Models.Jogador

@{
    ViewBag.Title = Model.Id > 0 ? $"Editar Jogador: {Model.Nome}" : "Criar Novo Jogador";
}

@section Styles {
    <style>
        .form-group {
            margin-bottom: 20px;
        }

        .form-label {
            font-weight: bold;
        }

        .card {
            border-radius: 10px;
        }

        .card-header {
            background-color: #007bff;
            color: white;
            font-size: 1.5rem;
            padding: 15px;
        }

        .card-body {
            padding: 20px;
        }

        .btn-primary {
            background-color: #007bff;
            border: none;
        }

            .btn-primary:hover {
                background-color: #0056b3;
            }

        .btn-secondary {
            background-color: #6c757d;
            border: none;
        }

            .btn-secondary:hover {
                background-color: #5a6268;
            }

        .text-danger {
            font-size: 0.875rem;
        }
    </style>
}

<div class="card shadow-sm">
    <div class="card-header">
        <h4>@ViewBag.Title</h4>
    </div>
    <div class="card-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger mb-3" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Nacionalidade, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Nacionalidade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nacionalidade, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Posicao, htmlAttributes: new { @class = "form-label" })
                @Html.EnumDropDownListFor(model => model.Posicao, "Selecione a posição", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Posicao, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NumeroCamisa, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.NumeroCamisa, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "1", @max = "99" } })
                @Html.ValidationMessageFor(model => model.NumeroCamisa, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Altura, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Altura, new { htmlAttributes = new { @class = "form-control", @type = "number", @step = "1", @placeholder = "Altura em cm" } })
                @Html.ValidationMessageFor(model => model.Altura, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Peso, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Peso, new { htmlAttributes = new { @class = "form-control", @type = "number", @step = "0.1", @min = "50", @max = "150", @placeholder = "Peso em kg" } })
                @Html.ValidationMessageFor(model => model.Peso, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PePreferido, htmlAttributes: new { @class = "form-label" })
                @Html.EnumDropDownListFor(model => model.PePreferido, "Selecione o pé preferido", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PePreferido, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TimeId, "Time", htmlAttributes: new { @class = "form-label" })
                @Html.DropDownListFor(model => model.TimeId, (SelectList)ViewBag.TimeId, "Selecione o time", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TimeId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary">Salvar</button>
                <a href="@Url.Action("Index")" class="btn btn-secondary">Voltar</a>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}